version: '2'

# This file is loaded first and sets all the default values for
# variables.  Before this is loaded only the basic variables passed
# from a-i-b are guaranteed to exists: name, arch, distro_name,
# image_mode, target After this loads the per-arch, and per-target
# includes are loaded which can override these. Then the defaults-computed
# file is included that can change the defaults based on thse, and
# only then is the variables for the user supplied manifest evaluated.

mpp-vars:
  # Value of RELEASE in /etc/build-info
  release_name: ""
  # Value of IMAGE_VERSION in /etc/build-info and ostree version
  version: "unversioned"

  # the osname as used by OSTree
  osname: centos
  ostree_repo_url: http://10.0.2.100/
  ostree_remote_name: auto-sig
  use_composefs_signed: true
  use_transient_etc: true

  # Kernel options
  use_debug: false
  # Name of kernel rpm to use
  kernel_package: kernel-automotive
  # Optional specific kernel rpm version to use
  kernel_version: ""
  extra_kernel_opts: []
  simple_kernel_opts: []
  kernel_loglevel: 4
  # Extra kernel modules loaded at boot
  load_modules: []
  # Denylist => remove these modules from image
  denylist_modules: []
  # Allowlist => Remove all modules except the listed and their dependencies
  # Note: This defaults to null for disabled, because empty list means remove all modules
  allowlist_modules: null

  denylist_rpms: []

  fusa_denylist_modules:
    - fat
    - nfs
    - nfs_acl

  timezone: UTC
  locale: en_US.UTF-8
  hostname: localhost

  tar_paths: []
  use_containers_extra_store: false
  container_subuid: 2500000000:1500000000
  container_subgid: 2500000000:1500000000
  containers_configdir: /etc/containers

  use_qm: false   # Set to true to add QM container
  use_qm_containers_extra_store: false
  qm_container_subuid: 1000000000:1500000000
  qm_container_subgid: 1000000000:1500000000
  # These are used to add rpms to the qm partition
  qm_extra_repos: []
  qm_extra_rpms: []
  qm_simple_repos: []
  qm_simple_rpms: []
  qm_simple_add_devel_repos: false
  qm_simple_add_debug_repos: false

  use_bluechi_agent: false
  use_bluechi_controller: false
  bluechi_nodename: "host"
  bluechi_controller_host_ip: ""
  bluechi_controller_socket: "/run/bluechi/bluechi.sock"
  bluechi_controller_allowed_node_names: []

  use_luks: false
  luks_passphrase: password
  luks_use_integrity: false
  luks_auto_unlock: false

  coredump_storage: none
  journal_storage: persistent

  # Root authentication info, please change password
  root_password: $6$xoLqEUz0cGGJRx01$H3H/bFm0myJPULNMtbSsOFd/2BnHqHkMD92Sfxd.EKM9hXTWSmELG8cf205l6dktomuTcgKGGtGDgtvHVXSWU.
  root_ssh_keys: []
  ssh_permit_root_login: false                  # Only used by aws target
  ssh_permit_password_auth: false               # Not used by a-i-b

  # Default data for an example guest user. This is not used by a-i-b but can be used by the end user manifest
  guest_password: $6$xoLqEUz0cGGJRx01$H3H/bFm0myJPULNMtbSsOFd/2BnHqHkMD92Sfxd.EKM9hXTWSmELG8cf205l6dktomuTcgKGGtGDgtvHVXSWU.
  guest_uid: 2000
  guest_gid: 2000

  # Memory limits for the QM container (if used)
  qm_memory_max: infinity
  qm_memory_high: infinity

  # Image size and layout
  image_size: '8589934592'    # Total size of image, in bytes (as string)
  sblpart_size: 8192 # 4M
  efipart_size: 204800
  bootpart_size: 614400
  abootpart_size: 131072 # 64M
  vbmetapart_size: 128 # 64K
  varpart_relative_size: 0 # /var size as relative of image size (unless varpart_size is set)
  qm_varpart_relative_size: 0 # /var/qm size as relative of image size (unless qm_varpart_size is set)
  extra_parts: []            # Extra partitions to add to image

  # Network setup
  use_static_ip: false
  static_ip: "10.0.2.15"
  static_ip_prefixlen: "24"
  static_gw: "10.0.2.2"
  static_dns: "10.0.2.3"
  static_ip_iface: ""
  static_ip_modules: []
  static_ip_uuid: 6fb8f75a-7fde-4906-a51e-a70e56c58742

  # These are available for end users, not used internally
  extra_rpms: []
  extra_repos: []
  extra_build_rpms: []
  extra_build_repos: []

  ########################################
  ### Internal stuff, here be dragons ####
  ########################################

  uefi_vendor: centos
  release_rpm: centos-release-automotive
  linux_firmware_rpm:
  partition_label: gpt

  extra_image_copy: []

  aboot_compress_kernel: null
  active_gpt_attrs: # Default active setup for Qualcomm
    - 48
    - 49 # priority 0x3
    - 50 # active
    - 51
    - 52
    - 53 # remaining tries 0x7
  inactive_gpt_attrs:  # Default inactive for Qualcomm
    - 48 # priority 0x1
    - 50 # active
    - 51
    - 52
    - 53 # remaining tries 0x7

  # Possible values:
  # aboot, grub2, grub2-sbl, none
  use_boot: grub2
  use_abl: false
  qm_pipeline: qm_rootfs
  use_tuned_realtime: false
  tuned_realtime_isolcpus: "2-N"
  use_testpart: false
  use_ostree: false
  is_autoinit_supported: true
  use_autoinit: false
  use_autoinit_root: false
  aboot_partlabel: system_a
  vbmeta_partlabel: vbmeta_a
  use_composefs: true
  use_ocibased: false
  systemd_timeout: 30s
  static_uuids: true
  default_uuids:
    rootfs: 76a22bf4-f153-4541-b6c7-0332c0dfaeac
    bootfs: 156f0420-627b-4151-ae6f-fda298097515
    parttab: d209c89e-ea5e-4fbd-b161-b461cce297e0
    efipart: 68b2905b-df3e-4fb3-80fa-49d1e773aa33
    bootpart: 61b2905b-df3e-4fb3-80fa-49d1e773aa32
    varpart: 10475e3e-9356-11ee-b5b9-305a3ae2477d
    qm_varpart: c36a70ca-8827-4e0e-977e-7179ccfe0e65
    abootpart_a: 1dd3a986-997c-0c48-1d1b-b0d0399f3153
    abootpart_b: 45105095-3847-4657-51f2-2a0144550453
    vbmetapart_a: da91d469-09b3-ce43-795e-3b86f3735143
    vbmetapart_b: 305087ff-bf9a-910d-f3c4-606a8de7788a
    rootpart: 6264d520-3fb9-423f-8ab8-7a0a8e3d3562
    luks: aedd1eef-f24e-425e-a9f3-bb5a1c996a95
  use_compliance_mode: false
  use_module_sig_enforce: true
  use_efi_runtime: true
  consoles:
    mpp-if: arch == 'aarch64'
    then: ttyAMA0
    else: ttyS0
  selinux_mode: enforcing
  selinux_policy: targeted
  selinux_secure_mode:
    mpp-eval: image_mode == 'image'
  selinux_booleans: []
  kernel_opts: []
  dracut_modules: []
  dracut_add_modules:
    - base
    - dracut-systemd
    - fs-lib
    - kernel-modules
    - kernel-modules-extra
    - rootfs-block
    - shutdown
    - systemd
    - systemd-initrd
    - terminfo
    - udev-rules
    - usrmount
  dracut_omit_modules:
    - bash
    - i18n
    - lunmask
    - mdraid
    - memstrack
    - nss-softokn
    - nvdimm
    - qemu
    - resume
    - terminfo
    - virtiofs
  dracut_filesystems:
    - ext4
  dracut_compression: "lz4"
  # If set, this replaces the default driver set, we use it for targets to set the hw-specific drivers
  dracut_drivers: []
  # Added on top of default or dracut_drivers, used for non-we specific drivers
  dracut_add_drivers: []
  # Filter out these drivers from any of the above
  dracut_omit_drivers: []
  # Force load drivers
  dracut_force_drivers: []
  dracut_install: []
  container_cmd:
    - "/usr/bin/bash"
  container_entrypoint: []
  containers_extra_store: /usr/share/containers/storage
  qm_containers_extra_store: /usr/share/containers/storage
  containers_transient_store: true
  containers_read_only: true
  tmp_is_tmpfs: true
  image_enabled_services: []
  image_masked_services:
    - systemd-hwdb-update.service
    - ldconfig.service
    # this waits by default for all interfaces, we do not want that
    - NetworkManager-wait-online.service
  image_masked_generators:
    # legacy scripts not supported
    - systemd-rc-local-generator
    - systemd-sysv-generator
    # Use systemd units in favour of legacy configs
    - systemd-veritysetup-generator
    - systemd-cryptsetup-generator
    - systemd-integritysetup-generator
    # Use fixed mountpoints
    - systemd-gpt-auto-generator
    # Disable custom kernel cmdline operations
    - systemd-run-generator
    - systemd-debug-generator
    - selinux-autorelabel-generator.sh
    # Not using systemd-boot
    - systemd-bless-boot-generator
    # Not using hibernate
    - systemd-hibernate-resume-generator
    # Not using systemd offline updates
    - systemd-system-update-generator
    # We use .mount services only
    - systemd-fstab-generator
    # We're re-doing ostree generators statically
    - ostree-system-generator
  image_disabled_services:
    # Not using remote filesystems
    - remote-fs.target
    # Not using systemd-boot
    - systemd-boot-update.service
  extra_subuid: ""
  extra_subgid: ""
  efipart_dos_type: 'ef'
  efipart_bootable: false
  distro_gpg_keys: ""

  # Timestamps, etc
  reproducible_image: false
  image_uuid:
    mpp-eval: ('ffffffff-ffff-ffff-ffff-ffffffffffff' if reproducible_image else str(_uuid.uuid4()))
  timestamp:
    mpp-eval: (1 if reproducible_image else _datetime.datetime.now().timestamp())
  build_timestamp:
    mpp-eval: (str(_datetime.datetime.fromtimestamp(timestamp)))

  # These are overridden by the distro file
  distro_repos: []
  distro_devel_repos: []
  distro_debug_repos: []
  distro_build_rpms: []

  # These are overridden by the target file
  target_repos: []
  target_rpms: []
  target_build_repos: []
  target_build_rpms: []
  target_extra_image_stages: []
  target_supported_arches: []
  target_fusa_denylist_modules: []

  # These are overridden by the arch file
  arch_rpms: []
  arch_build_rpms: []

  osbuild_toml_rpm:

  fusa_denylist_rpms:
    - e2fsprogs
    - dosfstools
    - xfsprogs
    - erofs-utils

  build_rpms:
    - dnf
    - dosfstools
    - e2fsprogs
    - efibootmgr
    - grub2-tools
    - grub2-tools-minimal
    - policycoreutils
    - python3-iniparse
    - python3
    - python3-pyyaml
    - python3-mako
    - rpm-ostree
    - selinux-policy-$selinux_policy
    - skopeo
    - systemd
    - tar
    - xz
    - zstd

  base_rpms:
    - efibootmgr
    - glibc-langpack-en
    - hostname
    - passwd
    - rootfiles
    - selinux-policy-$selinux_policy
    - systemd-udev
    - dracut-config-generic
    - grub2-tools-minimal
    - lz4
