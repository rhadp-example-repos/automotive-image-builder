version: '2'

pipelines:
  - name: build-keys
    build: name:build
    stages:
      - mpp-if: use_composefs
        then:
          type: org.osbuild.ostree.genkey
          options:
            publickey: /build-key.pub
            secretkey: /build-key

  - name: ostree-tree
    build: name:build
    stages:
      mpp-join:
        - - type: org.osbuild.copy
            inputs:
              tree:
                type: org.osbuild.tree
                origin: org.osbuild.pipeline
                references:
                  - name:rootfs
            options:
              paths:
                - from: input://tree/
                  to: tree:///
          - type: org.osbuild.mkdir
            options:
              paths:
                mpp-eval: extra_tree_dirs
          - type: org.osbuild.copy
            inputs:
              extra-tree:
                type: org.osbuild.tree
                origin: org.osbuild.pipeline
                references:
                  - name:extra-tree-content
            options:
              paths:
                mpp-eval: extra_tree_content
          - type: org.osbuild.users
            options:
              users:
                root:
                  password:
                    mpp-if: root_password
                    then:
                      mpp-eval: root_password
                  key:
                    mpp-if: root_ssh_key
                    then:
                      mpp-eval: root_ssh_key
          - mpp-if: use_composefs
            then:
              type: org.osbuild.copy
              inputs:
                tree:
                  type: org.osbuild.tree
                  origin: org.osbuild.pipeline
                  references:
                    - name:build-keys
              options:
                paths:
                  - from: input://tree/build-key.pub
                    to: tree:///etc/ostree/initramfs-root-binding.key
          - type: org.osbuild-auto.ostree.pre-gen
            options:
              osname:
                mpp-eval: osname
          - type: org.osbuild.systemd
            options:
              enabled_services:
                - mpp-if: not use_aboot
                  then: greenboot-grub2-set-counter.service
                - mpp-if: not use_aboot
                  then: greenboot-grub2-set-success.service
                - greenboot-healthcheck.service
                - mpp-if: not use_aboot
                  then: greenboot-rpm-ostree-grub2-check-fallback.service
                - greenboot-status.service
                - greenboot-task-runner.service
                - mpp-if: "containers_transient_store and 'podman' in rpms['rootfs']"
                  then: podman-clean-transient.service
              disabled_services:
                - mpp-if: use_aboot
                  then: greenboot-grub2-set-success.service
                - mpp-if: use_aboot
                  then: greenboot-grub2-set-counter.service
        - mpp-eval: image_extra_stages
        - - type: org.osbuild.selinux
            options:
              file_contexts:
                mpp-format-string: etc/selinux/{selinux_policy}/contexts/files/file_contexts
          - type: org.osbuild.dracut.conf
            options:
              filename: 90-image.conf
              config:
                early_microcode: false
                reproducible: true
                compress:
                  mpp-if: dracut_compression
                  then:
                    mpp-eval: dracut_compression
                dracutmodules:
                  mpp-if: dracut_modules
                  then:
                    mpp-eval: dracut_modules
                add_dracutmodules:
                  mpp-if: dracut_add_modules and not dracut_modules
                  then:
                    mpp-eval: dracut_add_modules
                omit_dracutmodules:
                  mpp-if: dracut_omit_modules
                  then:
                    mpp-eval: dracut_omit_modules
                drivers:
                  mpp-if: dracut_drivers
                  then:
                    mpp-eval: dracut_drivers
                add_drivers:
                  mpp-if: dracut_add_drivers
                  then:
                    mpp-eval: dracut_add_drivers
                omit_drivers:
                  mpp-if: dracut_omit_drivers
                  then:
                    mpp-eval: dracut_omit_drivers
                force_drivers:
                  mpp-if: dracut_force_drivers
                  then:
                    mpp-eval: dracut_force_drivers
                filesystems:
                  mpp-if: dracut_filesystems
                  then:
                    mpp-eval: dracut_filesystems
                install_items:
                  mpp-if: dracut_install
                  then:
                    mpp-eval: dracut_install
          - type: org.osbuild.ostree.preptree
            options:
              etc_group_members:
                - wheel
                - docker
          - mpp-if: use_aboot
            then:
              type: org.osbuild-auto.aboot.conf
              options:
                pagesize:
                  mpp-if: "locals().get('aboot_pagesize',) != None"
                  then:
                    mpp-format-string: "{aboot_pagesize}"
                kernel_offset:
                  mpp-if: "locals().get('aboot_kernel_offset') != None"
                  then:
                    mpp-format-string: "{aboot_kernel_offset}"
                partition_a:
                  mpp-if: "locals().get('aboot_partition_a') != None"
                  then:
                    mpp-format-string: "{aboot_partition_a}"
                partition_b:
                  mpp-if: "locals().get('aboot_partition_b') != None"
                  then:
                    mpp-format-string: "{aboot_partition_b}"
                second_offset:
                  mpp-if: "locals().get('aboot_second_offset') != None"
                  then:
                    mpp-format-string: "{aboot_second_offset}"
                tags_offset:
                  mpp-if: "locals().get('aboot_tags_offset') != None"
                  then:
                    mpp-format-string: "{aboot_tags_offset}"
                base:
                  mpp-if: "locals().get('aboot_base') != None"
                  then:
                    mpp-format-string: "{aboot_base}"
                dtb_file:
                  mpp-if: "locals().get('aboot_dtb_file') != None"
                  then:
                    mpp-format-string: "{aboot_dtb_file}"
                preptree: true
                compress_kernel:
                  mpp-if: "aboot_compress_kernel != None"
                  then:
                    mpp-eval: aboot_compress_kernel
                ramdisk_offset:
                  mpp-if: "locals().get('aboot_ramdisk_offset') != None"
                  then:
                    mpp-format-string: "{aboot_ramdisk_offset}"
          - mpp-if: use_aboot
            then:
              type: org.osbuild-auto.aboot.update
              options:
                preptree: true
                kernel:
                  mpp-if: use_kernel_debug_package
                  then:
                    mpp-eval: rpms['rootfs'][kernel_core_package].evra+'+debug'
                  else:
                    mpp-eval: rpms['rootfs'][kernel_core_package].evra

  - name: ostree-commit
    build: name:build
    stages:
      - type: org.osbuild.ostree.init
        options:
          path: /repo
      - type: org.osbuild.ostree.commit
        inputs:
          tree:
            type: org.osbuild.tree
            origin: org.osbuild.pipeline
            references:
              - name:ostree-tree
        options:
          ref:
            mpp-eval: ostree_ref
          os_version:
            mpp-eval: ostree_os_version
          parent:
            mpp-if: ostree_ref in locals().get("ostree_parent_refs", {})
            then:
              mpp-eval: ostree_parent_refs[ostree_ref]
          selinux-label-version:
            mpp-if: use_transient_etc
            then: 1
      - mpp-if: use_composefs
        then:
          type: org.osbuild.copy
          inputs:
            tree:
              type: org.osbuild.tree
              origin: org.osbuild.pipeline
              references:
                - name:build-keys
          options:
            paths:
              - from: input://tree/build-key.pub
                to: tree:///repo/build-key.pub
              - from: input://tree/build-key
                to: tree:///repo/build-key
      - mpp-if: use_composefs
        then:
          type: org.osbuild.ostree.sign
          options:
            repo: repo
            ref:
              mpp-eval: ostree_ref
            key: /repo/build-key

  - name: ostree-oci-image
    build: name:build
    stages:
      - type: org.osbuild.ostree.encapsulate
        inputs:
          commit:
            type: org.osbuild.ostree
            origin: org.osbuild.pipeline
            references:
              name:ostree-commit:
                ref:
                  mpp-eval: ostree_ref
        options:
          filename: image.oci-archive
          cmd:
            mpp-eval: container_cmd

  - name: image-tree
    build: name:build
    stages:
      - type: org.osbuild.ostree.init-fs
      - mpp-if: not use_ocibased
        then:
          type: org.osbuild.ostree.pull
          options:
            repo: /ostree/repo
            remote:
              mpp-eval: ostree_remote_name
          inputs:
            commits:
              type: org.osbuild.ostree
              origin: org.osbuild.pipeline
              references:
                name:ostree-commit:
                  ref:
                    mpp-eval: ostree_ref
      - type: org.osbuild.ostree.os-init
        options:
          osname:
            mpp-eval: osname
      - type: org.osbuild.ostree.config
        options:
          repo: /ostree/repo
          config:
            sysroot:
              mpp-if: use_aboot
              then:
                bootloader: aboot
              else:
                bootloader: none
      - mpp-if: use_composefs
        then:
          type: org.osbuild.experimental.ostree.config
          options:
            repo: /ostree/repo
            config:
              integrity:
                composefs: "true"
      - mpp-if: not use_ocibased
        then:
          type: org.osbuild.ostree.remotes
          options:
            repo: /ostree/repo
            remotes:
              - name:
                  mpp-eval: ostree_remote_name
                url:
                  mpp-eval: ostree_repo_url
      - type: org.osbuild.mkdir
        options:
          paths:
            - path: /boot/efi
              mode: 448
      - mpp-if: use_ocibased
        then:
          type: org.osbuild.ostree.deploy.container
          options:
            osname:
              mpp-eval: osname
            target_imgref:
              mpp-format-string: "ostree-unverified-registry:{oci_source}:{oci_source_tag}"
            mounts:
              - /boot
              - /boot/efi
            rootfs:
              label: root
            kernel_opts:
              mpp-eval: kernel_opts
          inputs:
            images:
              type: org.osbuild.containers
              origin: org.osbuild.source
              mpp-resolve-images:
                images:
                  - source: $oci_source
                    tag: $oci_source_tag
        else:
          type: org.osbuild.ostree.deploy
          options:
            osname:
              mpp-eval: osname
            ref:
              mpp-eval: ostree_ref
            remote:
              mpp-eval: ostree_remote_name
            mounts:
              - /boot
              - /boot/efi
            rootfs:
              mpp-if: not use_aboot
              then:
                label: root
            kernel_opts:
              mpp-eval: kernel_opts
      - type: org.osbuild.ostree.fillvar
        options:
          deployment:
            osname:
              mpp-eval: osname
            ref: ostree/1/1/0
      - type: org.osbuild.users
        mounts:
          - type: org.osbuild.ostree.deployment
            name: ostree.deployment
            options:
              deployment:
                osname:
                  mpp-eval: osname
                ref: ostree/1/1/0
        options:
          users:
            root:
              key:
                mpp-eval: root_ssh_key
      - type: org.osbuild.ostree.selinux
        options:
          deployment:
            osname:
              mpp-eval: osname
            ref: ostree/1/1/0
      - mpp-if: use_aboot
        then:
          type: org.osbuild-auto.aboot.update
          options:
            mpp-if: use_kernel_debug_package
            then:
              kernel:
                mpp-eval: rpms['rootfs'][kernel_core_package].evra+'+debug'
            else:
              kernel:
                mpp-eval: rpms['rootfs'][kernel_core_package].evra
      - mpp-if: use_grub2
        then:
          type: org.osbuild.grub2
          options:
            rootfs:
              label: root
            bootfs:
              label: boot
            uefi:
              vendor:
                mpp-eval: uefi_vendor
              unified: true
              install: true
            legacy: false
            write_defaults: false
            greenboot: true
